<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.programme.Fortress.Function.Business.dao.PayInterposeMapper">

    <select id="getPayInforCount" parameterType="com.programme.Fortress.Function.Business.entity.PayInfor" resultType="int">
        select count(ordernum) from (
            select pay.ordernum
                from bnk_pay_infor pay inner join bnk_pay_interpose i on pay.ordernum=i.ordernum where pay.payprocess ='1' and i.submit_id = #{user_id}
                union
            select pay.ordernum
                from bnk_pay_infor pay where to_char(pay.trandate,'yyyy-MM-dd') between #{dateFrom} and #{dateTo}
                and payprocess ='1' and  ceil((sysdate - pay.trandate) * 24)>2
                <include refid="condition"/>
        )
    </select>

    <select id="getPayInfor" parameterType="com.programme.Fortress.Function.Business.entity.PayInfor" resultType="com.programme.Fortress.Function.Business.entity.PayInterpose">
        select * from (
            select ROWNUM AS rowno,table_alias.* from (
                select <include refid="payColumn"/> ,submit_name
                    from bnk_pay_infor pay inner join bnk_pay_interpose i on pay.ordernum=i.ordernum where pay.payprocess ='1' and i.submit_id = #{user_id}
                    union all
                select * from (
                    select <include refid="payColumn"/>,'System' as submit_name
                        from bnk_pay_infor pay where to_char(pay.trandate,'yyyy-MM-dd') between #{dateFrom} and #{dateTo}
                            and payprocess ='1' and  ceil((sysdate - pay.trandate) * 24)>2
                            <include refid="condition"/> order by createdTime )
            ) table_alias )
        where rowno between ${offset}+1 and ${offset}+${limit}
    </select>

    <sql id="payColumn">
        pay.ordernum,pay.version,pay.txcode,pay.agentid,pay.subbranchid,pay.txamount,pay.trandate as createdTime
    </sql>

    <sql id="condition">
        <if test="ordernum !=null and ordernum !=''">
            and ordernum =#{ordernum}
        </if>
        <if test="version != null and version !=''">
            and version =#{version}
        </if>
        <if test="agentid !=null and agentid !=''">
            and agentid = #{agentid}
        </if>
    </sql>

    <sql id="whereParams">
        <if test="ordernum !=null and ordernum !=''">
            and ordernum in
            <foreach item="ordernum" index="index" collection="list" open="(" separator="," close=")">
                ${ordernum}
            </foreach>
        </if>
        <if test="version != null and ordernum !=''">
            and version in
            <foreach item="version" index="index" collection="list" open="(" separator="," close=")">
                ${version}
            </foreach>
        </if>
        <if test="agentid !=null and agentid !=''">
            and agentid in
            <foreach item="agentid" index="index" collection="list" open="(" separator="," close=")">
                ${agentid}
            </foreach>
        </if>
    </sql>

</mapper>